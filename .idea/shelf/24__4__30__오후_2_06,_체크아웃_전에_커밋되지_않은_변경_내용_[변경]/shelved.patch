Index: src/user/UserLoginView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package user;\r\n\r\nimport jihye.DeliveryView;\r\nimport kibeom.CartView;\r\n\r\nimport static seungyeon.category.openCate;\r\nimport static user.UserRepository.generateCaptcha;\r\nimport static user.UserRepository.generateThisTime;\r\nimport static util.SimpleInput.input;\r\n\r\npublic class UserLoginView {\r\n    static UserRepository ur;\r\n    public static final String RESET = \"\\033[0m\";\r\n    public static final String GREEN = \"\\033[0;32m\";\r\n    public static final String YELLOW = \"\\033[0;33m\";\r\n    public static final String BLUE = \"\\033[0;34m\";\r\n    public static final String PURPLE = \"\\033[0;35m\";\r\n    public static final String CYAN = \"\\033[0;36m\";\r\n    public static final String WHITE = \"\\033[0;37m\";\r\n\r\n    public void start() {\r\n\r\n        // repository.load();\r\n\r\n        while (true) {\r\n            System.out.println(\"\\n============쇼핑몰 프로그램==============\");\r\n            System.out.println(\"1. 회원가입\");\r\n            System.out.println(\"2. 로그인\");\r\n            System.out.println(\"3. 프로그램 종료\");\r\n            System.out.println(\"========================================\");\r\n\r\n            String menuNum = input(\">> \");\r\n\r\n            switch (menuNum) {\r\n                case \"1\":\r\n                    signUpUser();\r\n                    break;\r\n                case \"2\":\r\n                    callLogin();\r\n                    break;\r\n                case \"3\":\r\n                    boolean flag = exitProgram();\r\n                    if (flag) return;\r\n                default:\r\n                    System.out.println(\"\\n메뉴를 잘못 선택했습니다.\");\r\n            }\r\n        }\r\n    } // start end\r\n\r\n    private static void signUpUser() {\r\n        String password = null;\r\n        System.out.println(\"***************회원가입 필수 입력 항목************\");\r\n        String name = input(GREEN+ \"이름 : \"+ RESET);\r\n        System.out.println(\"가입 가능한 회원입니다.\");\r\n        while (true) {\r\n            System.out.println(GREEN+ \"비밀번호는 8글자 이상이여야 합니다.\" + RESET);\r\n            String passwordChek = input(GREEN+ \"비밀번호 : \"+ RESET);\r\n            if (passwordChek.length() >= 8 ) {\r\n                password = passwordChek;\r\n                System.out.println(GREEN+ \"사용 가능한 패스워드입니다.\"+RESET);\r\n                break;\r\n            } else {\r\n                System.out.println(YELLOW+ \"가입 시 비밀번호 조건을 확인해주세요.\"+RESET);\r\n            }\r\n        }\r\n        String email = input(GREEN+ \"이메일 : \"+RESET);\r\n        String nickname = input(GREEN+ \"별명 : \"+RESET);\r\n        int age = Integer.parseInt(input(GREEN+ \"나이 : \"+RESET));\r\n        String gender = input(GREEN+ \"성별 : \"+RESET);\r\n        String address = input(GREEN+ \"주소 : \"+RESET);\r\n        String captcha = generateCaptcha(6);\r\n        String agree = input(GREEN+ \"개인정보 수집 및 회원가입에 동의하시겠습니까? [Y, N]\\n >> \"+RESET).toUpperCase();\r\n        if (agree.equals(\"Y\")){\r\n            System.out.println(GREEN+ generateThisTime() + \"에 개인정보에 동의하셨습니다.\"+RESET);\r\n            System.out.println(GREEN+ \"자동 입력 방지 문자: \" + captcha+RESET);\r\n            while (true) {\r\n                String captchaTrue = input(GREEN+ \"자동 입력 방지 문자를 보이는대로 입력해주세요. \\n >>\"+RESET);\r\n                if (captchaTrue.equals(captcha))  {\r\n                    User newUser = new User(name, password, email, age, address, gender, nickname);\r\n                    UserRepository.addUser(newUser);\r\n                    System.out.println(GREEN+ \"#. 회원가입이 완료되었습니다.\"+RESET);\r\n                    break;\r\n                } else {\r\n                    System.out.println(YELLOW+ \"! 자동 입력 방지 문자를 확인해주세요\"+RESET);\r\n                    System.out.println(GREEN+ \"# 1. 자동 입력 방지 문자 새로고침하기\"+RESET);\r\n                    int menuNum = Integer.parseInt(input(\">> \"));\r\n\r\n                    switch (menuNum) {\r\n                        case 1 :\r\n                            captcha = generateCaptcha(6);\r\n                            System.out.println(GREEN+ \"자동 입력 방지 문자: \" + captcha+RESET);\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            System.out.println(YELLOW+ \"그럼 가입하지마\"+RESET);\r\n        }\r\n    }\r\n\r\n    private void callLogin() {\r\n        System.out.println(\"***************로그인 필수 입력 항목************\");\r\n        String name = input(\"이름 : \");\r\n        String password = input(\"비밀번호 : \");\r\n        boolean login = UserRepository.login(name, password);\r\n        if (login) {\r\n            System.out.println(\"로그인 성공!\");\r\n            System.out.printf(\"%s님 환영합니다.\",name);\r\n        } else {\r\n            System.out.println(\"회원정보를 확인해주세요.\");\r\n        }\r\n\r\n        mainPage();\r\n    }\r\n\r\n    public void mainPage() {\r\n        boolean b = ur.loginTrue();\r\n        while (b) {\r\n            System.out.println(\"\\n=============카테고리 페이지==============\");\r\n            System.out.println(\"1. 카테고리\");\r\n            System.out.println(\"2. 마이페이지\");\r\n            System.out.println(\"3. 회원정보 수정\");\r\n            System.out.println(\"4. 배송조회\");\r\n            System.out.println(\"5. 장바구니\");\r\n            System.out.println(\"6. 로그아웃\");\r\n            System.out.println(\"========================================\");\r\n\r\n\r\n            String menuNum = input(\">> \");\r\n\r\n            switch (menuNum) {\r\n                case \"1\":\r\n                    openCate();\r\n                    break;\r\n                case \"2\":\r\n                    printLoggedInUserInfo();\r\n                    break;\r\n                case \"3\":\r\n                    passCheck();\r\n                    check = true;\r\n                    break;\r\n                case\"4\":\r\n                    DeliveryView deliveryView = new DeliveryView();\r\n                    deliveryView.deliveryMenu();\r\n                    break;\r\n                case\"5\":\r\n                    CartView cartView = new CartView();\r\n                    cartView.showCartRepository();\r\n                case \"6\":\r\n                    byebye();\r\n                    break;\r\n                default:\r\n                    System.out.println(\"\\n메뉴를 잘못 선택했습니다.\");\r\n            }\r\n        }\r\n    } // start\r\n\r\n    public void byebye() {\r\n        UserRepository.logout();\r\n        System.out.println(\"로그아웃 되었습니다.\");\r\n        start();\r\n    }\r\n\r\n\r\n    boolean check = true;\r\n    public void passCheck() {\r\n        boolean b = ur.loginTrue();\r\n        while (b && check) {\r\n            String check = input(\"현재 로그인한 계정의 비밀번호를 입력해주세요. \");\r\n            boolean isLogin = UserRepository.loginCheck(check);\r\n            if (isLogin) {\r\n                changeInfo();\r\n            } else {\r\n                System.out.println(\"비밀번호를 확인해주세요\");\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    public void changeInfo() {\r\n        boolean b = ur.loginTrue();\r\n        while (b && check) {\r\n            System.out.println(\"\\n=============회원정보 수정==============\");\r\n            System.out.println(\"# 1. 별명 변경하기\");\r\n            System.out.println(\"# 2. 배송지 수정하기\");\r\n            System.out.println(\"# 3. 이메일 변경하기\");\r\n            System.out.println(\"# 4. 비밀번호 변경하기\");\r\n            System.out.println(\"# 5. 뒤로가기\");\r\n            System.out.println(\"========================================\");\r\n\r\n\r\n            String menuNum = input(\">> \");\r\n\r\n            switch (menuNum) {\r\n                case \"1\":\r\n                    nicknameChange();\r\n                    break;\r\n                case \"2\":\r\n                    printLoggedInUserInfo();\r\n                    break;\r\n                case \"3\":\r\n                    check=true;\r\n                    emailChange();\r\n                    break;\r\n                case \"4\":\r\n                    check = true;\r\n                    passwordChange();\r\n                    break;\r\n                case \"5\":\r\n                    mainPage();\r\n                case \"6\":\r\n                    byebye();\r\n                    b = false;\r\n                    break;\r\n                default:\r\n                    System.out.println(\"\\n메뉴를 잘못 선택했습니다.\");\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    boolean exitProgram() {\r\n        String exit = input(\"- 프로그램을 종료합니까? [y/n]\\n>> \");\r\n        if (exit.equals(\"y\")) {\r\n            System.out.println(\"프로그램을 종료합니다!\");\r\n            return true;\r\n        } else {\r\n            System.out.println(\"프로그램 종료를 취소합니다.\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    public static void printLoggedInUserInfo() {\r\n        if (UserRepository.loggedInUser != null) {\r\n            System.out.println(\"***************로그인한 회원 정보**************\");\r\n            System.out.println(\"이름 : \" + UserRepository.loggedInUser.getName());\r\n            System.out.println(\"나이 : \" + UserRepository.loggedInUser.getAge());\r\n            System.out.println(\"배송지 주소 : \"+ UserRepository.loggedInUser.getAddress());\r\n            System.out.println(\"별명 : \" + UserRepository.loggedInUser.getNickname());\r\n            System.out.println(\"성별 : \" +UserRepository.loggedInUser.getGender());\r\n            System.out.println(\"이메일 : \" + UserRepository.loggedInUser.getEmail());\r\n            System.out.println(\"비번 : \" + UserRepository.blindPassword());\r\n        } else {\r\n            System.out.println(\"로그인한 회원이 없습니다.\");\r\n        }\r\n    }\r\n\r\n\r\n    public void passwordChange() {\r\n        System.out.println(\"현재 비밀번호를 입력해주세요\");\r\n        String pas = input(\">> \");\r\n        String pass = UserRepository.getPass();\r\n        if (pass.equals(pas)) {\r\n            System.out.println(\"변경할 비밀번호를 입력해주세요.\");\r\n            String newPas = input(\">> \");\r\n            UserRepository.ChangePass(newPas);\r\n            System.out.println(\"#. 비밀번호가 변경되었습니다.\");\r\n            check = false;\r\n        } else {\r\n            System.out.println(\"비밀번호가 일치하지 않습니다.\");\r\n\r\n        }\r\n    }\r\n    public void nicknameChange() {\r\n        System.out.println(\"변경할 닉네임을 입력해주세요.\");\r\n        String newNick = input(\">> \");\r\n        UserRepository.changeNickname(newNick);\r\n        System.out.printf(\"#. 닉네임이 %s 로 변경되었습니다.\", newNick);\r\n        check = false;\r\n    }\r\n    public void emailChange() {\r\n        System.out.println(\"현재 이메일을 입력해주세요\");\r\n        String thismail = input(\">> \");\r\n        String oldmail = UserRepository.getEmail();\r\n        if (oldmail.equals(thismail)) {\r\n            System.out.println(\"변경할 이메일을 입력해주세요.\");\r\n            String newEmail = input(\">> \");\r\n            UserRepository.changeEmail(newEmail);\r\n            System.out.println(\"#. 이메일이 변경되었습니다.\");\r\n            check = false;\r\n        } else {\r\n            System.out.println(\"이메일이 일치하지 않습니다.\");\r\n\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n
===================================================================
diff --git a/src/user/UserLoginView.java b/src/user/UserLoginView.java
--- a/src/user/UserLoginView.java	
+++ b/src/user/UserLoginView.java	
@@ -1,24 +1,13 @@
 package user;
 
-import jihye.DeliveryView;
-import kibeom.CartView;
-
-import static seungyeon.category.openCate;
-import static user.UserRepository.generateCaptcha;
-import static user.UserRepository.generateThisTime;
+import static jihye.DeliveryView.deliveryMenu;
+import static user.UserRepository.printLoggedInUserInfo;
 import static util.SimpleInput.input;
 
 public class UserLoginView {
-    static UserRepository ur;
-    public static final String RESET = "\033[0m";
-    public static final String GREEN = "\033[0;32m";
-    public static final String YELLOW = "\033[0;33m";
-    public static final String BLUE = "\033[0;34m";
-    public static final String PURPLE = "\033[0;35m";
-    public static final String CYAN = "\033[0;36m";
-    public static final String WHITE = "\033[0;37m";
+    public static UserRepository ur;
 
-    public void start() {
+    public static void start() {
 
         // repository.load();
 
@@ -48,77 +37,34 @@
     } // start end
 
     private static void signUpUser() {
-        String password = null;
         System.out.println("***************회원가입 필수 입력 항목************");
-        String name = input(GREEN+ "이름 : "+ RESET);
-        System.out.println("가입 가능한 회원입니다.");
-        while (true) {
-            System.out.println(GREEN+ "비밀번호는 8글자 이상이여야 합니다." + RESET);
-            String passwordChek = input(GREEN+ "비밀번호 : "+ RESET);
-            if (passwordChek.length() >= 8 ) {
-                password = passwordChek;
-                System.out.println(GREEN+ "사용 가능한 패스워드입니다."+RESET);
-                break;
-            } else {
-                System.out.println(YELLOW+ "가입 시 비밀번호 조건을 확인해주세요."+RESET);
-            }
-        }
-        String email = input(GREEN+ "이메일 : "+RESET);
-        String nickname = input(GREEN+ "별명 : "+RESET);
-        int age = Integer.parseInt(input(GREEN+ "나이 : "+RESET));
-        String gender = input(GREEN+ "성별 : "+RESET);
-        String address = input(GREEN+ "주소 : "+RESET);
-        String captcha = generateCaptcha(6);
-        String agree = input(GREEN+ "개인정보 수집 및 회원가입에 동의하시겠습니까? [Y, N]\n >> "+RESET).toUpperCase();
-        if (agree.equals("Y")){
-            System.out.println(GREEN+ generateThisTime() + "에 개인정보에 동의하셨습니다."+RESET);
-            System.out.println(GREEN+ "자동 입력 방지 문자: " + captcha+RESET);
-            while (true) {
-                String captchaTrue = input(GREEN+ "자동 입력 방지 문자를 보이는대로 입력해주세요. \n >>"+RESET);
-                if (captchaTrue.equals(captcha))  {
-                    User newUser = new User(name, password, email, age, address, gender, nickname);
-                    UserRepository.addUser(newUser);
-                    System.out.println(GREEN+ "#. 회원가입이 완료되었습니다."+RESET);
-                    break;
-                } else {
-                    System.out.println(YELLOW+ "! 자동 입력 방지 문자를 확인해주세요"+RESET);
-                    System.out.println(GREEN+ "# 1. 자동 입력 방지 문자 새로고침하기"+RESET);
-                    int menuNum = Integer.parseInt(input(">> "));
-
-                    switch (menuNum) {
-                        case 1 :
-                            captcha = generateCaptcha(6);
-                            System.out.println(GREEN+ "자동 입력 방지 문자: " + captcha+RESET);
-                    }
-                }
-            }
-        } else {
-            System.out.println(YELLOW+ "그럼 가입하지마"+RESET);
-        }
+        String name = input("이름 : ");
+        String password = input("비밀번호 : ");
+        String email = input("이메일 : ");
+        String nickname = input("별명 : ");
+        int age = Integer.parseInt(input("나이 : "));
+        String gender = input("성별 : ");
+        String address = input("주소 : ");
+
+        User newUser = new User(name, password, email, age, address, gender, nickname);
+        UserRepository.addUser(newUser);
     }
 
-    private void callLogin() {
+    private static void callLogin() {
         System.out.println("***************로그인 필수 입력 항목************");
         String name = input("이름 : ");
         String password = input("비밀번호 : ");
-        boolean login = UserRepository.login(name, password);
-        if (login) {
-            System.out.println("로그인 성공!");
-            System.out.printf("%s님 환영합니다.",name);
-        } else {
-            System.out.println("회원정보를 확인해주세요.");
-        }
-
+        UserRepository.login(name, password);
         mainPage();
     }
 
-    public void mainPage() {
+    public static void mainPage() {
         boolean b = ur.loginTrue();
         while (b) {
             System.out.println("\n=============카테고리 페이지==============");
             System.out.println("1. 카테고리");
             System.out.println("2. 마이페이지");
-            System.out.println("3. 회원정보 수정");
+            System.out.println("3. 비밀번호 변경");
             System.out.println("4. 배송조회");
             System.out.println("5. 장바구니");
             System.out.println("6. 로그아웃");
@@ -129,24 +75,20 @@
 
             switch (menuNum) {
                 case "1":
-                    openCate();
+//                    signUpUser();
                     break;
                 case "2":
                     printLoggedInUserInfo();
                     break;
                 case "3":
-                    passCheck();
-                    check = true;
+                    passwordChange();
                     break;
-                case"4":
-                    DeliveryView deliveryView = new DeliveryView();
-                    deliveryView.deliveryMenu();
+                case "4":
+                    deliveryMenu();
                     break;
-                case"5":
-                    CartView cartView = new CartView();
-                    cartView.showCartRepository();
                 case "6":
                     byebye();
+                    b = false;
                     break;
                 default:
                     System.out.println("\n메뉴를 잘못 선택했습니다.");
@@ -154,71 +96,14 @@
         }
     } // start
 
-    public void byebye() {
+
+
+    public static void byebye() {
         UserRepository.logout();
-        System.out.println("로그아웃 되었습니다.");
-        start();
-    }
-
-
-    boolean check = true;
-    public void passCheck() {
-        boolean b = ur.loginTrue();
-        while (b && check) {
-            String check = input("현재 로그인한 계정의 비밀번호를 입력해주세요. ");
-            boolean isLogin = UserRepository.loginCheck(check);
-            if (isLogin) {
-                changeInfo();
-            } else {
-                System.out.println("비밀번호를 확인해주세요");
-                break;
-            }
-        }
-    }
-
-    public void changeInfo() {
-        boolean b = ur.loginTrue();
-        while (b && check) {
-            System.out.println("\n=============회원정보 수정==============");
-            System.out.println("# 1. 별명 변경하기");
-            System.out.println("# 2. 배송지 수정하기");
-            System.out.println("# 3. 이메일 변경하기");
-            System.out.println("# 4. 비밀번호 변경하기");
-            System.out.println("# 5. 뒤로가기");
-            System.out.println("========================================");
-
-
-            String menuNum = input(">> ");
-
-            switch (menuNum) {
-                case "1":
-                    nicknameChange();
-                    break;
-                case "2":
-                    printLoggedInUserInfo();
-                    break;
-                case "3":
-                    check=true;
-                    emailChange();
-                    break;
-                case "4":
-                    check = true;
-                    passwordChange();
-                    break;
-                case "5":
-                    mainPage();
-                case "6":
-                    byebye();
-                    b = false;
-                    break;
-                default:
-                    System.out.println("\n메뉴를 잘못 선택했습니다.");
-            }
-        }
     }
 
 
-    boolean exitProgram() {
+    static boolean exitProgram() {
         String exit = input("- 프로그램을 종료합니까? [y/n]\n>> ");
         if (exit.equals("y")) {
             System.out.println("프로그램을 종료합니다!");
@@ -230,62 +115,20 @@
     }
 
 
-
-    public static void printLoggedInUserInfo() {
-        if (UserRepository.loggedInUser != null) {
-            System.out.println("***************로그인한 회원 정보**************");
-            System.out.println("이름 : " + UserRepository.loggedInUser.getName());
-            System.out.println("나이 : " + UserRepository.loggedInUser.getAge());
-            System.out.println("배송지 주소 : "+ UserRepository.loggedInUser.getAddress());
-            System.out.println("별명 : " + UserRepository.loggedInUser.getNickname());
-            System.out.println("성별 : " +UserRepository.loggedInUser.getGender());
-            System.out.println("이메일 : " + UserRepository.loggedInUser.getEmail());
-            System.out.println("비번 : " + UserRepository.blindPassword());
-        } else {
-            System.out.println("로그인한 회원이 없습니다.");
-        }
-    }
-
-
-    public void passwordChange() {
-        System.out.println("현재 비밀번호를 입력해주세요");
-        String pas = input(">> ");
+    public static void passwordChange() {
+        String pas = input("현재 비밀번호를 입력해주세요.");
+        String newPas = input("변경할 비밀번호를 입력해주세요.");
         String pass = UserRepository.getPass();
+
         if (pass.equals(pas)) {
-            System.out.println("변경할 비밀번호를 입력해주세요.");
-            String newPas = input(">> ");
             UserRepository.ChangePass(newPas);
-            System.out.println("#. 비밀번호가 변경되었습니다.");
-            check = false;
-        } else {
-            System.out.println("비밀번호가 일치하지 않습니다.");
-
         }
+//        boolean b = ur.mypage();
+//        while (b) {
+//            String oldPass = input("현재 비밀번호를 입력해주세요");
+//            String newPass = input("변경 할 비밀번호를 입력해주세요");
+//        }
     }
-    public void nicknameChange() {
-        System.out.println("변경할 닉네임을 입력해주세요.");
-        String newNick = input(">> ");
-        UserRepository.changeNickname(newNick);
-        System.out.printf("#. 닉네임이 %s 로 변경되었습니다.", newNick);
-        check = false;
-    }
-    public void emailChange() {
-        System.out.println("현재 이메일을 입력해주세요");
-        String thismail = input(">> ");
-        String oldmail = UserRepository.getEmail();
-        if (oldmail.equals(thismail)) {
-            System.out.println("변경할 이메일을 입력해주세요.");
-            String newEmail = input(">> ");
-            UserRepository.changeEmail(newEmail);
-            System.out.println("#. 이메일이 변경되었습니다.");
-            check = false;
-        } else {
-            System.out.println("이메일이 일치하지 않습니다.");
-
-        }
-    }
-
 }
-
 
 
Index: src/jihye/DeliveryView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package jihye;\r\n\r\nimport user.UserLoginView;\r\nimport user.UserRepository;\r\n\r\nimport java.util.Scanner;\r\nimport java.util.Timer;\r\nimport java.util.TimerTask;\r\n\r\n\r\npublic class DeliveryView {\r\n    private static Scanner scanner = new Scanner(System.in);\r\n    // 배송조회 시작 화면 메서드\r\n    public static void deliveryMenu() {\r\n        while (true) {\r\n            System.out.println(\"=======================배송조회=========================\");\r\n            System.out.println(\"1. 구매 목록 보기\");\r\n            System.out.println(\"2. 뒤로 가기\");\r\n\r\n            String menuNum = input(\">> \");\r\n                UserLoginView userLoginView = new UserLoginView();\r\n\r\n            switch (menuNum) {\r\n                case \"1\":\r\n                    showPurchaseList();\r\n                    break;\r\n                case \"2\":\r\n                    userLoginView.mainPage();\r\n                    return;\r\n                default:\r\n                    System.out.println(\"\\n잘못된 메뉴 번호입니다. 제대로 입력해주세요.\");\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // 1. 구매 목록 보기 기능 메서드\r\n    private static void showPurchaseList() {\r\n        System.out.println(\"\\n========================구매 목록=============================\");\r\n        // DeliveryRepository 클래스에 임시로 넣어둔 리스트 반복해서 가져오기\r\n        for (Buy buy : DeliveryRepository.buyList) {\r\n            System.out.println(\"브랜드: \" + buy.getBrand() + \", 상품명: \" + buy.getProductName()\r\n                    + \", 상품 금액 : \" + buy.getOrderTotalValue() + \", 주소 : \" + buy.getAddress());\r\n        }\r\n        System.out.println(\"=============================================================\");\r\n        System.out.println(\"\\n1. 구매 상품 배송 현황 확인하기\");\r\n        String menuNum2 = input(\">> \");\r\n        switch (menuNum2) {\r\n            case \"1\":\r\n                deliveryStatus();\r\n                break;\r\n            default:\r\n                System.out.println(\"\\n잘못된 메뉴 번호입니다. 제대로 입력해주세요.\");\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n    // 구매 상품 배송 현황 확인하는 기능 메서드\r\n    private static void deliveryStatus() {\r\n        System.out.println(\"\\n==========================배송 현황==========================\");\r\n\r\n        String[] steps = {\">> 주문 확인 중 \\uD83D\\uDED2\", \" → 배송 준비 중 \\uD83D\\uDCE6\", \" → 배송 중 \\uD83D\\uDE9A\", \" → 배송 완료 \\u2705\"}; // 모든 단계를 정의\r\n\r\n        StringBuilder currentSteps = new StringBuilder(); // 현재까지의 단계를 저장할 문자열\r\n\r\n        Timer timer = new Timer();\r\n        timer.schedule(new TimerTask() {\r\n            int currentStepIndex = 0; // 현재 진행 중인 단계 인덱스로 가져오기\r\n\r\n            @Override\r\n            public void run() {\r\n                // 현재 단계 추가\r\n                currentSteps.append(steps[currentStepIndex]);\r\n\r\n                // 현재까지의 단계 출력\r\n                System.out.print(\"\\r\" + currentSteps.toString());\r\n                System.out.flush(); // 출력을 강제로 갱신\r\n\r\n                // 다음 단계 인덱스로 이동\r\n                currentStepIndex++;\r\n\r\n                // 모든 단계가 출력되었다면 타이머 종료\r\n                if (currentStepIndex == steps.length) {\r\n                    timer.cancel();\r\n                    System.out.println(); // 줄 바꿈 추가\r\n\r\n                    //selectMenu();\r\n                }\r\n            }\r\n        }, 0, 5000); // 처음 실행 후 3초마다 단계 진행되도록\r\n\r\n        System.out.println(\"  \\u2705 배송 현황 확인 완료시 아래 원하시는 메뉴를 입력하세요.\\n   \\uD83E\\uDC7B \\uD83E\\uDC7B \\uD83E\\uDC7B \\uD83E\\uDC7B \\uD83E\\uDC7B \\uD83E\\uDC7B \\n1. 구매 목록 재확인 하기 \\n2. 카테고리 페이지로 가기\\n\");\r\n        // 사용자 입력 대기\r\n        String input;\r\n        do {\r\n            input = input(\">> \").trim(); // 사용자 입력 받고 앞뒤 공백 제거\r\n            if (!input.isEmpty()) { // 입력이 비어있지 않으면\r\n                if (input.equals(\"1\")) {\r\n                    timer.cancel(); // 타이머 취소하여 단계 출력 멈춤\r\n                    showPurchaseList(); // 구매 목록 재확인 메서드 호출\r\n                    return; // 무한 루프 탈출\r\n                } else if (input.equals(\"2\")) {\r\n                    timer.cancel(); // 타이머 취소하여 단계 출력 멈춤\r\n                    UserLoginView userLoginView = new UserLoginView();\r\n                    userLoginView.mainPage(); // 다른 클래스의 mainPage() 메서드로 가야 함\r\n                    return; // 무한 루프 탈출\r\n                } else {\r\n                    System.out.println(\"잘못된 메뉴 번호입니다. 다시 제대로 입력해주세요.\");\r\n                }\r\n            }\r\n        } while (input.isEmpty()); // 입력이 비어있으면 계속해서 입력 대기\r\n\r\n    }\r\n\r\n    private static String input(String prompt) {\r\n        System.out.print(prompt);\r\n        return scanner.nextLine();\r\n    }\r\n}
===================================================================
diff --git a/src/jihye/DeliveryView.java b/src/jihye/DeliveryView.java
--- a/src/jihye/DeliveryView.java	
+++ b/src/jihye/DeliveryView.java	
@@ -13,7 +13,7 @@
     // 배송조회 시작 화면 메서드
     public static void deliveryMenu() {
         while (true) {
-            System.out.println("=======================배송조회=========================");
+            System.out.println("\n=======================배송조회=========================");
             System.out.println("1. 구매 목록 보기");
             System.out.println("2. 뒤로 가기");
 
@@ -36,7 +36,7 @@
 
     // 1. 구매 목록 보기 기능 메서드
     private static void showPurchaseList() {
-        System.out.println("\n========================구매 목록=============================");
+        System.out.println("\n========================🛒구매 목록🛒=============================");
         // DeliveryRepository 클래스에 임시로 넣어둔 리스트 반복해서 가져오기
         for (Buy buy : DeliveryRepository.buyList) {
             System.out.println("브랜드: " + buy.getBrand() + ", 상품명: " + buy.getProductName()
@@ -56,9 +56,10 @@
         }
     }
 
+
     // 구매 상품 배송 현황 확인하는 기능 메서드
     private static void deliveryStatus() {
-        System.out.println("\n==========================배송 현황==========================");
+        System.out.println("\n==========================🚚배송 현황🚚==========================");
 
         String[] steps = {">> 주문 확인 중 \uD83D\uDED2", " → 배송 준비 중 \uD83D\uDCE6", " → 배송 중 \uD83D\uDE9A", " → 배송 완료 \u2705"}; // 모든 단계를 정의
 
@@ -90,7 +91,7 @@
             }
         }, 0, 5000); // 처음 실행 후 3초마다 단계 진행되도록
 
-        System.out.println("  \u2705 배송 현황 확인 완료시 아래 원하시는 메뉴를 입력하세요.\n   \uD83E\uDC7B \uD83E\uDC7B \uD83E\uDC7B \uD83E\uDC7B \uD83E\uDC7B \uD83E\uDC7B \n1. 구매 목록 재확인 하기 \n2. 카테고리 페이지로 가기\n");
+        System.out.println(" \u2705 배송 현황 확인 완료시 아래 원하시는 메뉴를 입력하세요.\n   \uDC7B \uD83E\uDC7B \uD83E\uDC7B \uD83E\uDC7B \uD83E\uDC7B \uD83E\uDC7B \n1. 구매 목록 재확인 하기 \n2. 카테고리 페이지로 가기\n");
         // 사용자 입력 대기
         String input;
         do {
